if(any(is.na(i)))
stop("Unknown vertex descriptor(s): ",
paste(ii[is.na(i)],collapse = ", "))
list(1,2,3)[[]]
names(x)
i <- c("species","xx")
missing(i)
is.character(i)
ii <- i
i <- match(i, names(x))
if(any(is.na(i)))
stop("Unknown vertex descriptor(s): ",
paste(ii[is.na(i)],collapse = ", "))
missing(j)
j
rm(j)
missing(j)
x$vertex[i]
value <- as.data.frame(x$vertex[i])
value
!missing(j)
j
as.data.frame(x$vertex, row.names = labels(x))
j=c("N1","N2","N101")
!missing(j)
is.character(j)
jj <- j
j <- match(j, labels(x))
j
if(any(is.na(j)))
stop("Unknown vert(ex/ices): ",
paste(jj[is.na(j)],collapse = ", "))
if(any(is.na(j)))
stop("Unknown vertex or vertices: ",
paste(jj[is.na(j)],collapse = ", "))
j=c("N1","N2")
is.character(j)
jj <- j
j <- match(j, labels(x))
if(any(is.na(j)))
stop("Unknown vertex or vertices: ",
paste(jj[is.na(j)], collapse=", "))
j
value[,j]
value <- as.data.frame(x$vertex, row.names = labels(x))
value
drop=TRUE
j
length(x$vertex)
j
j > length(x$vertex)
any(j > length(x$vertex))
stop("Subscript out of bound: ",j)
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
if(any(j > length(x$vertex)))
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
value <- value[,j]
value
i
i="N1"
is.character(i)
ii <- i
i <- match(i, labels(x))
if(any(is.na(i)))
stop("Unknown vertex or vertices: ",
paste(ii[is.na(i)], collapse=", "))
value <- value[i,,drop]
value
value <- as.data.frame(x$vertex, row.names = labels(x))
drop=FALSE
value <- value[,j,drop]
value
value <- value[i,,drop]
value
j
j="xx"
i="N1"
value <- as.data.frame(x$vertex, row.names = labels(x))
!missing(j)
if(is.character(j)) {
jj <- j
j <- match(j, names(x))
if(any(is.na(j)))
stop("Unknown vertex descriptor(s): ",
paste(jj[is.na(j)], collapse=", "))
}
if(any(j > length(x$vertex)))
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
ncol(value)
j
i
j
value <- as.data.frame(x$vertex, row.names = labels(x))
if(!missing(j)) {
if(is.character(j)) {
jj <- j
j <- match(j, names(x))
if(any(is.na(j)))
stop("Unknown vertex descriptor(s): ",
paste(jj[is.na(j)], collapse=", "))
}
if(any(j > ncol(value)))
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
}
if(!missing(i)) {
if(is.character(i)) {
ii <- i
i <- match(i, labels(x))
if(any(is.na(i)))
stop("Unknown vertex or vertices: ",
paste(ii[is.na(i)], collapse=", "))
}
if(any(i > nrow(value)))
stop("Subscript(s) out of bound: ", paste(i, collapse = ", "))
}
value[i,j,drop]
drop=TRUE
value <- as.data.frame(x$vertex, row.names = labels(x))
if(!missing(j)) {
if(is.character(j)) {
jj <- j
j <- match(j, names(x))
if(any(is.na(j)))
stop("Unknown vertex descriptor(s): ",
paste(jj[is.na(j)], collapse=", "))
}
if(any(j > ncol(value)))
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
}
if(!missing(i)) {
if(is.character(i)) {
ii <- i
i <- match(i, labels(x))
if(any(is.na(i)))
stop("Unknown vertex or vertices: ",
paste(ii[is.na(i)], collapse=", "))
}
if(any(i > nrow(value)))
stop("Subscript(s) out of bound: ", paste(i, collapse = ", "))
}
value[i,j,drop]
rm(i,ii,j,jj,value,drop)
rm(x)
list(1,2,3)[[]]
value[,,drop]
`[.graph` <- function(x, i, j, drop=TRUE) {
value <- as.data.frame(x$vertex, row.names = labels(x))
if(!missing(j)) {
if(is.character(j)) {
jj <- j
j <- match(j, names(x))
if(any(is.na(j)))
stop("Unknown vertex descriptor(s): ",
paste(jj[is.na(j)], collapse=", "))
}
if(any(j > ncol(value)))
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
}
if(!missing(i)) {
if(is.character(i)) {
ii <- i
i <- match(i, labels(x))
if(any(is.na(i)))
stop("Unknown vertex or vertices: ",
paste(ii[is.na(i)], collapse=", "))
}
if(any(i > nrow(value)))
stop("Subscript(s) out of bound: ", paste(i, collapse = ", "))
}
value[if(!missing(i)) i, if(!missing(j)) j, drop]
}
`[[.graph` <- function(x, i) x$vertex[[i]]
x[[1L]]
x <- gr_linear
coordinates(x)
length(x)
labels(x)
labels(x) <- sprintf("N%d",1:length(x))
x
names(x)
names(x) <- c("species","chld","xx")
x
`[[.graph` <- function(x, i) x$vertex[[i]]
x[[1L]]
`[[.graph` <- function(x, i) {
y <- x
y$vertex <- x$vertex[[i]]
y
}
x[[1L]]
x[[1:2]]
c(1,2,3)[c(TRUE,FALSE,TRUE,TRUE,TRUE)]
`[[.graph` <- function(x, i) {
if(is.character(i)) {
ii <- i
i <- match(i, names(x))
if(any(is.na(i)))
stop("Unknown vertex descriptor(s): ",
paste(ii[is.na(i)], collapse=", "))
} else if(is.logical(i)) {
i <- which(i)
}
if(any(i > length(x$vertex)))
stop("Subscript(s) out of bound: ", paste(i, collapse = ", "))
y <- x
y$vertex <- x$vertex[i]
y
}
`[[.graph` <- function(x, i) {
if(is.character(i)) {
ii <- i
i <- match(i, names(x))
if(any(is.na(i)))
stop("Unknown vertex descriptor(s): ",
paste(ii[is.na(i)], collapse=", "))
} else if(is.logical(i)) {
i <- which(i)
}
if(any(i > length(x$vertex)))
stop("Subscript(s) out of bound: ", paste(i, collapse = ", "))
y <- x
y$vertex <- x$vertex[i]
y
}
x[[1L]]
x[[1L:2L]]
x[[1L:3L]]
x[[1L:4L]]
`[[.graph` <- function(x, i) {
if(is.character(i)) {
ii <- i
i <- match(i, names(x))
if(any(is.na(i)))
stop("Unknown vertex descriptor(s): ",
paste(ii[is.na(i)], collapse=", "))
} else if(is.logical(i)) {
i <- which(i)
}
if(any(i > length(x$vertex)))
stop("Subscript(s) out of bound: ",
paste(i[i > length(x$vertex)], collapse = ", "))
y <- x
y$vertex <- x$vertex[i]
y
}
x[[1L:4L]]
x[[1L:5L]]
x[[1L]]
x[[2L]]
x[[3L]]
x[["x"]]
x[["xx"]]
x[["species"]]
`[[.graph` <- function(x, i) {
if(is.character(i)) {
ii <- i
i <- match(i, names(x))
if(any(is.na(i)))
stop("Unknown vertex descriptor(s): ",
paste(ii[is.na(i)], collapse=", "))
} else if(is.logical(i)) {
i <- which(i)
}
if(any(i > length(x$vertex)))
stop("Subscript(s) out of bound: ",
paste(i[i > length(x$vertex)], collapse = ", "))
x$vertex <- x$vertex[i]
x
}
x[["species"]]
x[["chld"]]
x[["xx"]]
x[["yy"]]
`[.graph` <- function(x, i, j, drop=TRUE) {
value <- as.data.frame(x$vertex, row.names = labels(x))
if(!missing(j)) {
if(is.character(j)) {
jj <- j
j <- match(j, names(x))
if(any(is.na(j)))
stop("Unknown vertex descriptor(s): ",
paste(jj[is.na(j)], collapse=", "))
}
if(any(j > ncol(value)))
stop("Subscript(s) out of bound: ", paste(j, collapse = ", "))
}
if(!missing(i)) {
if(is.character(i)) {
ii <- i
i <- match(i, labels(x))
if(any(is.na(i)))
stop("Unknown vertex or vertices: ",
paste(ii[is.na(i)], collapse=", "))
}
if(any(i > nrow(value)))
stop("Subscript(s) out of bound: ", paste(i, collapse = ", "))
}
value[if(!missing(i)) i, if(!missing(j)) j, drop]
}
x["xx"]
x[,"xx"]
NROW(value)
value <- 1L:3L
if(NROW(value) != length(x))
stop("The number of values (", NROW(value),
") does not correspond to the number of vertices (", length(x) ,")")
if(NCOL(value) != length(i))
stop("The number of variables (", NCOL(value),
") does not correspond to the number of indices (", length(i) ,")")
i=c(1,2,3)
if(NCOL(value) != length(i))
stop("The number of variables (", NCOL(value),
") does not correspond to the number of indices (", length(i) ,")")
!is.list(value)
`[[<-.graph` <- function(x, i, value) {
if(inherits(value, "graph"))
value <- as.data.frame(value$vertex, row.names=labels(value))
if(NROW(value) != length(x))
stop("The number of values (", NROW(value),
") does not correspond to the number of vertices (", length(x) ,")")
if(NCOL(value) != length(i))
stop("The number of variables (", NCOL(value),
") does not correspond to the number of indices (", length(i) ,")")
if(NCOL(value) > 1L && !is.list(value))
stop("Multiple variables have to be provided as a list or data frame")
if(length(i) > 1L) {
for(j in 1L:length(i))
x$vertex[[i[j]]] <- value[[j]]
} else
x$vertex[[i]] <- value
x
}
x[[1L]]
x[[1L]]
x[["xxx"]] <- x[["xx"]]
x
`[[<-.graph` <- function(x, i, value) {
if(is.null(value))
x$vertex[i] <- NULL
if(inherits(value, "graph"))
value <- as.data.frame(value$vertex, row.names=labels(value))
if(NROW(value) != length(x))
stop("The number of values (", NROW(value),
") does not correspond to the number of vertices (", length(x) ,")")
if(NCOL(value) != length(i))
stop("The number of variables (", NCOL(value),
") does not correspond to the number of indices (", length(i) ,")")
if(NCOL(value) > 1L && !is.list(value))
stop("Multiple variables have to be provided as a list or data frame")
if(length(i) > 1L) {
for(j in 1L:length(i))
x$vertex[[i[j]]] <- value[[j]]
} else
x$vertex[[i]] <- value
x
}
x[["xxx"]] <- x[["xx"]]
x
x[["xxx"]] <- NULL
`[[<-.graph` <- function(x, i, value) {
if(is.null(value)) {
x$vertex[i] <- NULL
return(x)
}
if(inherits(value, "graph"))
value <- as.data.frame(value$vertex, row.names=labels(value))
if(NROW(value) != length(x))
stop("The number of values (", NROW(value),
") does not correspond to the number of vertices (", length(x) ,")")
if(NCOL(value) != length(i))
stop("The number of variables (", NCOL(value),
") does not correspond to the number of indices (", length(i) ,")")
if(NCOL(value) > 1L && !is.list(value))
stop("Multiple variables have to be provided as a list or data frame")
if(length(i) > 1L) {
for(j in 1L:length(i))
x$vertex[[i[j]]] <- value[[j]]
} else
x$vertex[[i]] <- value
x
}
x[["xxx"]] <- x[["xx"]]
x[["xxx"]] <- NULL
x
x[[2L]] <- NULL
x
x[[10L]] <- NULL
x
x[["zut"]] <- NULL
x
x
x[[c("zut","flute")]] <- 1L:100L
x[[c("zut","flute")]] <- data.frame(1L:100L,100L:1L)
x
x$vertex
x[[3L:9L]] <- NULL
x
x[[2L]]
x[[2L]] <- NULL
x
x[[2L]] <- NULL
x
x[[2L]] <- NULL
x
x[[2L]] <- NULL
x
x[["xxx"]] <- x[["xx"]]
x[["xx"]]
length(value)
length(x)
stop("The graph objects have different lengths (value: ", length(value)
, " whereas value: ", length(x), ")")
stop("The graph objects have different lengths (value: ", length(value)
, ", whereas value: ", length(x), ")")
stop("The graph objects have different lengths ('value': ", length(value)
, ", whereas 'x': ", length(x), ")")
labels(value)
labels(x)
x[["species"]]
x[["chld"]]
x[["xx"]]
x[["yy"]]
list(truc=10, muche=3)[["zut"]]
list(truc=10, muche=3)[NA]
x <- gr_linear
length(x)
labels(x)
labels(x) <- sprintf("N%d",1:length(x))
x
names(x)
names(x) <- c("species","chld","xx")
x
`[[.graph` <- function(x, i)
as.data.frame(x$vertex[i], row.names=labels(x))
x[[1L]]
x[[1L:2L]]
`[[.graph` <- function(x, i) {
out <- x
out$vertex <- out$vertex[i]
out
}
x[[1L:2L]]
x[[3L]]
x[[4L]]
x[[4L]]$vertex
`[[.graph` <- function(x, i) {
out <- x
out$vertex <- out$vertex[[i]]
out
}
x[[4L]]$vertex
`[[.graph` <- function(x, i) {
out <- x
out$vertex <- out$vertex[i]
out
}
x[[4L]]$vertex
x[[1L:4L]]$vertex
x[[c("species","xxxx")]]$vertex
i=c("species","xxxx")
out <- x
out$vertex <- out$vertex[i]
names(out$vertex)
names(out$vertex) < i
out
out$vertex
names(out$vertex)
out <- x
out
out$vertex
out$vertex[integer()]
match(i,names(x))
i
i < match(i, names(x))
i <- i[!is.na(i)]
i
i
names(x)
i < match(i, names(x))
i
i < match(i, names(x))
i <- match(i, names(x))
i
i <- i[!is.na(i)]
i
x$vertex
x$vertex[c(TRUE,FALSE,TRUE,TRUE)]
i = c("species","xxxx")
i = c(TRUE,FALSE,TRUE,TRUE)
i = c("species","xxxx")
if(is.character(i)) i <- match(i, names(x))
else if(is.logical(i)) i <- which(i)
i = c("species","xxxx")
if(is.character(i)) i <- match(i, names(x))
else if(is.logical(i)) i <- which(i)
if(is.character(i)) i <- match(i, names(x))
else if(is.logical(i)) i <- which(i)
if(is.character(i)) i <- match(i, names(x))
else if(is.logical(i)) i <- which(i)
if(is.character(i)) {
i <- match(i, names(x))
} else if(is.logical(i)) i <- which(i)
i = c("species","xxxx")
if(is.character(i)) {
i <- match(i, names(x))
} else if(is.logical(i))
i <- which(i)
i
i <- i[!is.na(i)]
i
nc <- as.data.frame(x$vertex)
nc
